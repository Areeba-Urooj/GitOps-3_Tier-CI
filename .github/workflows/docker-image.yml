name: Go CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  compile_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23' # Updated to match your go.mod file

      - name: Go Modules Tidy and Download
        run: go mod tidy && go mod download

      - name: Go Build Check
        run: go build -v ./...

      - name: Go Test
        run: go test -v ./... # Added a dedicated test step, which is a best practice
      
      - name: Go Linter
        run: go vet ./...

  gitleaks_scan:
    runs-on: ubuntu-latest
    needs: compile_and_test # Changed from 'compile' to the new job name
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Gitleaks Scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trivy_fs_scan:
    runs-on: ubuntu-latest
    needs: gitleaks_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner (FS)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          scan-ref: .
          format: table
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  build_docker_image_and_push:
    runs-on: ubuntu-latest
    needs: trivy_fs_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }} # Best practice to use a secret
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: urooj275/microblog-api:${{ env.IMAGE_TAG }}

  trivy_image_scan:
    runs-on: ubuntu-latest
    needs: build_docker_image_and_push
    steps:
      - name: Run Trivy image scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: image
          image-ref: urooj275/microblog-api:${{ env.IMAGE_TAG }}
          format: table
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  update_cd_repo:
    runs-on: ubuntu-latest
    needs: trivy_image_scan
    steps:
      - name: Checkout CD repo
        uses: actions/checkout@v4
        with:
          repository: Areeba-Urooj/GitOps-3_Tier-CD
          ref: main # Changed from 'master' to 'main'
          token: ${{ secrets.CD_REPO_TOKEN }}
          path: cd

      - name: Install yq
        run: |
          curl -sL https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o yq && sudo install yq /usr/local/bin/yq

      - name: Bump backend image in manifests
        working-directory: cd
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          yq -i '
            (. | select(.kind=="Deployment" and .metadata.name=="backend")
               | .spec.template.spec.containers[]
               | .image)
            = "urooj275/microblog-api:" + strenv(IMAGE_TAG)
          ' k8s-prod/backend.yml # Ensure the file path is correct

      - name: Commit & push to CD repo
        working-directory: cd
        run: |
          git config user.name "ci-bot"
          git config user.email "ci-bot@users.noreply.github.com"
          git add -A
          git commit -m "bump microblog-api image to ${IMAGE_TAG}" || echo "No changes to commit"
          git push
